<<<<<<< HEAD
---
kind: Service
apiVersion: v1
metadata:
  name: httpd-example
  annotations:
    description: Exposes and load balances the application pods
spec:
  ports:
  - name: web
    port: 8080
    targetPort: 8080
  selector:
    name: httpd-example
kind: Route
apiVersion: v1
metadata:
  name: httpd-example
  to:
    kind: Service
    name: httpd-example
kind: ImageStream
apiVersion: v1
metadata:
  name: httpd-example
  annotations:
    description: Keeps track of changes in the application image
kind: BuildConfig
apiVersion: v1
metadata:
  name: httpd-example
  annotations:
    description: Defines how to build the application
    template.alpha.openshift.io/wait-for-ready: 'true'
spec:
  source:
    type: Git
    git:
      uri: https://github.com/sclorg/httpd-ex.git
  strategy:
    type: Source
    sourceStrategy:
      from:
        kind: ImageStreamTag
        namespace: openshift
        name: httpd:2.4
  output:
    to:
      kind: ImageStreamTag
      name: "httpd-example:latest"
  triggers:
  - type: ImageChange
  - type: ConfigChange
  - type: GitHub
    github:
      secret: "${GITHUB_WEBHOOK_SECRET}"
  - type: Generic
    generic:
      secret: "${GENERIC_WEBHOOK_SECRET}"
kind: DeploymentConfig
apiVersion: v1
metadata:
  name: "httpd-example"
  annotations:
    description: Defines how to deploy the application server
    template.alpha.openshift.io/wait-for-ready: 'true'
spec:
  strategy:
    type: Rolling
  triggers:
  - type: ImageChange
    imageChangeParams:
      automatic: true
      containerNames:
      - httpd-example
      from:
        kind: ImageStreamTag
        name: "httpd-example:latest"
  - type: ConfigChange
  replicas: 1
  selector:
    name: httpd-example
  template:
    metadata:
      name: httpd-example
      labels:
        name: httpd-example
    spec:
      containers:
      - name: httpd-example
        image: " "
        ports:
        - containerPort: 8080
        readinessProbe:
          timeoutSeconds: 3
          initialDelaySeconds: 3
          httpGet:
            path: "/"
            port: 8080
        livenessProbe:
          timeoutSeconds: 3
          initialDelaySeconds: 30
          httpGet:
            path: "/"
            port: 8080
        resources:
          limits:
            memory: 512Mi
        env: []
=======
apiVersion: apps/v1
kind: Deployment
metadata:
  name: guestbook-ui
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: guestbook-ui
  template:
    metadata:
      labels:
        app: guestbook-ui
    spec:
      containers:
      - image: registry.redhat.io/rhscl/httpd-24-rhel7
        name: guestbook-ui
        ports:
        - containerPort: 8443
>>>>>>> parent of e368ee4... Update guestbook-ui-deployment.yaml
